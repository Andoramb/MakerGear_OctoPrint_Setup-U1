
<div id="maintenanceTabs">

  <!-- Nav tabs -->
  <ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#maintenanceHome" aria-controls="maintenanceHome" role="tab" data-toggle="tab">Maintenance Home</a></li>
    <li role="presentation"><a href="#coldZ" aria-controls="coldZ" role="tab" data-toggle="tab">Z Offset</a></li>
    <li role="presentation"><a href="#bedLeveling" aria-controls="bedLeveling" role="tab" data-toggle="tab">Bed Leveling</a></li>
    <li role="presentation"><a href="#filamentLoading" aria-controls="filamentLoading" role="tab" data-toggle="tab">Filament Loading</a></li>
    <li role="presentation" data-bind="visible: $root.isDual()"><a href="#dualOffsets" aria-controls="dualOffsets" role="tab" data-toggle="tab">Dual Offsets</a></li>
  </ul>

  <!-- Tab panes -->
  <div class="tab-content">

  {#               
              
 I8a    a8I   
  "Yb,,dP"    
aaaa8888aaaa  
""""8888""""  
  ,dP'`Yb,    
 I8"    "8I   
              
              
               #}
    <div role="tabpanel" class="tab-pane active" id="maintenanceHome">Welcome to the MakerGear M3 Maintenance Tab.  Here you'll have easy access to individual maintenance operations for your printer, including Filament Loading and Unloading, Calibrating your Z Offset (either with the new Zigzag pattern or the classic Feeler Gauge method), Leveling your Bed (again, with the Zigzag or Feeler Gauge), and adjusting your Independent Dual Extruder Offsets (if relevant).




    </div>








    {#               
              
 I8a    a8I   
  "Yb,,dP"    
aaaa8888aaaa  
""""8888""""  
  ,dP'`Yb,    
 I8"    "8I   
              
              
               #}
    <div role="tabpanel" class="tab-pane" id="coldZ">
<div><input type="radio" name="maintenancePageSelect" value=2 data-bind="checkedValue: 2, checked: maintenancePage, click: window.scroll(0,0)" /> Adjust Starting Height - Cold</div>
<div><input type="radio" name="maintenancePageSelect" value=4 data-bind="checkedValue: 4, checked: maintenancePage, click: window.scroll(0,0)" /> Adjust Starting Height - Hot</div>
<br><hr />

{#     ad888888b,    #}
{#    d8"     "88    #}
{#            a8P    #}
{#         ,d8P"     #}
{#       a8P"        #}
{#     a8P'          #}
{#    d8"            #}
{#    88888888888    #}
    {# Adjust Starting Height #}

<div id="control-jog-custom" style="clear: both; display: none;" data-bind="visible: loginState.isUser  && maintenancePage()===2">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===2" />
    </div><br>
<h1>Adjust Starting Height - Cold using Feeler Gauge</h1>

Here we will adjust the starting height of the printer with the feeler gauge.  Click <strong>Prepare</strong> to move the printer to its testing position.<br><br>
<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.untouchable()">
<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.<br><br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>
<br>
<center><button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button></center>
</div>
<center><button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !$root.untouchable() && !isPrinting() && loginState.isUser() && !$root.stepTwoPrepared(), click: function() { $root.setupSetStartingHeight(0) ; $root.stepTwoPrepared(1) }">{{ _('Prepare') }}</button></center><br>
<div data-bind="visible:!$root.isDual()">
During this step, you'll use the <strong>Bed Height Buttons</strong> below to adjust the distance between the nozzle and the glass build plate.
</div>
<div data-bind="visible: $root.isDual()">
During this step, you'll use the <strong>Bed Height Buttons</strong> below to adjust the distance between the Left Extruder (T0) nozzle and the glass build plate.
</div>
 When this step is completed you should be able to slide the blue feeler gauge between the nozzle and glass with very little resistance.
<p>
    First, press the "1 mm Up" button as you are watching the bed. You will see the bed move 1 mm towards the nozzle. Slowly repeat this process until the build plate is within 1 mm of the nozzle. NOTE: In order to prevent the nozzle from colliding with the build plate, you should not use the "1 mm Up" button when the nozzle is within 1 mm of the build plate. The "1 mm Up" button may become disabled to prevent collision - in this case use the "0.1 mm Up" button to continue. 
</p>

<p>
<div data-bind="visible: !$root.isDual()">
    Now place the blue feeler gauge between the nozzle and the build plate, then click the "0.1 mm Up” button to bring the build plate even closer to the nozzle. As soon as you can sense that the feeler gauge is stuck between the nozzle and build plate, click the "0.1 mm Down” button once to move the build plate down until the feeler gauge is able to move freely between the nozzle and build plate.
</div>
<div data-bind="visible: $root.isDual()">
    Now place the blue feeler gauge between the nozzle and the build plate, then click the "0.1 mm Up” button to bring the build plate even closer to the T0 nozzle. As soon as you can sense that the feeler gauge is stuck between the nozzle and build plate, click the "0.1 mm Down” button  to move the build plate down until the feeler gauge is able to move freely between the nozzle and build plate.
</div>
</p>

<p>
    Next, click the "0.01 mm Up” button to move the bed up until you begin to feel resistance while sliding the feeler gauge between the build plate and nozzle. Once this is completed, click "Save New Starting Height"
</p>


<div class="fileupload-new thumbnail" style="width: 95%; ">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/13.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===2" /><center>
        </center>
    </div><br>
    <div data-bind="visible: !$root.hideDebug()"><br>Original Z Offset : <span data-bind="text: $root.ZOffset"></span><br></div>
Current Z Position : <span data-bind="text: $root.ZPos"></span>
<div data-bind="visible: !$root.hideDebug()"><br>Fresh data : <span data-bind="text: $root.ZPosFresh"></span></div><br>

<!-- Z jogging control panel -->


<h4>Bed Height Buttons</h4>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 1 mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.ZPos() > 1, click: function() { $root.sendJogCommand('z',-1,1) }"><i class="icon-arrow-up"></i></button> 1 mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',1,1) }"><i class="icon-arrow-down"></i></button> 1 mm Down
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.1 mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',-1,0.1) }"><i class="icon-arrow-up"></i></button> .1 mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',1,0.1) }"><i class="icon-arrow-down"></i></button> .1 mm Down
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.01 mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',-1,0.01) }"><i class="icon-arrow-up"></i></button> .01 mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',1,0.01) }"><i class="icon-arrow-down"></i></button> .01 mm Down
        </div>
    </div>




<br><br><br><br><br> <br><br><br>  <br>    

<center><button id="control-yinc" class="btnstayBig" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && !$root.stepTwoStartingHeightSaved(), 
click: function() { $root.setupSetStartingHeight(1); $root.stepTwoStartingHeightSaved(true); $root.goTo('3'); window.scroll(0,0) }">{{ _('Save New Starting Height') }}</button></center>
<br><br>

{# <center><button class="btngoBig" data-bind="enable: $root.stepTwoPrepared && $root.stepTwoStartingHeightSaved(), click: function() { $root.goTo('3'); window.scroll(0,0) }">Next Step</button></center> #}

<br><br></div>
{#            ,d8    #}
{#          ,d888    #}
{#        ,d8" 88    #}
{#      ,d8"   88    #}
{#    ,d8"     88    #}
{#    8888888888888  #}
{#             88    #}
{#             88    #}
{# Verify Starting Height (Wiggle) #}

<div id="wiggle-section" class="jog-panel" style="display:none;" data-bind="visible: loginState.isUser && maintenancePage()===4">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" />
    </div><br>

<h1 style="text-align:left">Verify Starting Height</h1>





<p>
   
    <i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i><div data-bind="visible:!$root.isDual()">
The printer's extruder and build platform are hot - do not touch them!
</div>
<div data-bind="visible: $root.isDual()">
The printer's Left Extruder (T0) and build platform are hot - do not touch them! 
</div>

</p>

<p>
    During this step, you will print a small Zigzag pattern that will help you to gauge, adjust and perfect your starting height (also known as "Z Offset"). 
</p>

<p>
    Clicking the "Print Zigzag Pattern" button will trigger the following printer tasks:
</p>

<ol>
    <li>Start to heat the extruder and build platform to their target temperatures — you will see actual temperatures shown in red and target temperatures shown in black directly below the "Print Zigzag Pattern" button.
    <li>Move components to their home positions.
    <li>Move extruder to its purge position.
    <li>Purge and wipe the extruder on the lower right-hand corner of the build plate.
    <li>Print a Zigzag pattern on the center of the build plate.
    <li>Move components to their final position.
</ol>


<p>
    When you are ready to begin this process, click "Print Zigzag Pattern":
</p>
<br>

<center><button class="btnstay" data-bind="enable: !$root.stepFourFirstWiggleClicked(), click: function() { $root.printWiggleConfirm(1); $root.enableLockedButton(8000); $root.stepFourFirstWiggleClicked(true) }">Print Zigzag Pattern</button></center><br>



<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>

Once the Zigzag pattern has printed, and the printer has fully parked, you can use your tweezers to remove any material on the side of the bed. Next, carefully remove the Zigzag pattern by using your tweezers to lift it off the bed from the rear left "tail".  The Zigzag pattern will peel off of the build plate differently according to the printer's current starting height.<br><br>


   
   <video controls id="filamentVideo1" class="video-js"  preload="none"     data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/wiggleposter.jpg'}, if:  maintenancePage() == 4" onclick="this.paused ? this.play() : this.pause();">
    <source src="/plugin/mgsetup/video/wiggleMiddle.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
    </video>

<br />


<p >
    <strong style="font-size:20px;" >Which of the following options best describes your Zigzag pattern? Click the photos to zoom in.</strong>
</p>



<table>
    <tr>
        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">
            <a href="/plugin/mgsetup/static/img/10.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/10.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" /></a>
 
        </td>

        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

            <a href="/plugin/mgsetup/static/img/11.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/11.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" /></a>
 
        </td>
 



        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

             <a href="/plugin/mgsetup/static/img/12.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/12.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" /></a>
         </td>
 
    </tr>




    <tr>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
            If the  Zigzag pattern peels off with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments, you have <strong>a perfect Starting Height</strong>. Click below to proceed to the next step. 
            <br />




            <br />

            <strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. 


             
        </td>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
                If the Zigzag pattern peels-off as an even strand made with little to no small section of connected segments at the end, <strong>the Starting Height is too low</strong>. Click below to adjust the starting height and print a new zigzag. 
           <!-- <br />
            <br />

            <strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. -->

        </td>
        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
     
            If the Zigzag pattern peels-off in one solid piece, with most/all segments of the zig-zag pattern connected, 
             <strong>the Starting Height is too high</strong>. Click below to adjust the starting height and print a new zigzag. 



        </td>
    </tr>

    <tr>

        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
            
            <center><button style="width:100%;" class="btngoBig" data-bind="enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.setupSetStartingHeight('2-maintenance'); window.scroll(0,0); $root.stepFourFirstWiggleClicked(false) }">Save<br /></button></center>

  <!--Too far-->
        </td>


        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
<div data-bind="visible: $root.stepFourShowFineAdjustments()==false"><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==false, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button></center>            

        </td>


        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
            <div data-bind="visible: $root.stepFourShowFineAdjustments()==false"><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==false, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button></center>  
            <!--Too Close-->
        </td>
    <tr>

</table>
<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10); $root.enableLockedButton(10000) }">Print This Zigzag Again</button><br>

<input type="checkbox" data-bind="checked: $root.stepFourShowFineAdjustments" /> Show Advanced Options.


</div>




</div>




{#               
              
 I8a    a8I   
  "Yb,,dP"    
aaaa8888aaaa  
""""8888""""  
  ,dP'`Yb,    
 I8"    "8I   
              
              
               #}
    <div role="tabpanel" class="tab-pane" id="bedLeveling">
    	<div><input type="radio" name="maintenancePageSelect" value=10 data-bind="checkedValue: 10, checked: maintenancePage, click: window.scroll(0,0)" /> Bed Leveling - Cold</div>
<div><input type="radio" name="maintenancePageSelect" value=6 data-bind="checkedValue: 6, checked: maintenancePage, click: window.scroll(0,0)" /> Bed Leveling - Hot</div>
<br><hr />
{#      ad8888ba,    #}
{#     8P'    "Y8    #}
{#    d8             #}
{#    88,dd888bb,    #}
{#    88P'    `8b    #}
{#    88       d8    #}
{#    88a     a8P    #}
{#     "Y88888P"     #}
{# Heated Leveling (wiggles) #}

<div id="wiggle-section" class="jog-panel" style="display:none;" data-bind="visible: loginState.isUser && maintenancePage()===6">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===6" />
    </div><br>
<br>




<h1 style="text-align:left;"> Heated Build Platform Leveling</h1>


Here you will be able to print Zigzag patterns in each corner and then adjust the bed leveling screw in that corner until the Zigzag pattern is acceptable. To begin, please click "Prepare" to Home the printer:
<center><button class="btnstay" data-bind="enable: !$root.stepSixPrepared(), click: function() { $root.setupSetStartingHeight('0') ; $root.stepSixPrepared(true) }">Prepare</button></center><br>



<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>


Once the printer has stopped moving, use the four Zigzag pattern position buttons to print in each corner, starting with the corner that was most different from the others in the Four Zigzag pattern print.  After each print, remove the Zigzag pattern with your tweezers. Inspect the Zigzag pattern and use your 2mm allen key to adjust the bed accordingly, as shown below:<br><br>



If the entire Zigzag pattern was completely stuck to the bed, the bed leveling screw needs to be loosened by turning it counter-clockwise, to lower the bed at this position.<br><br>
   
   <video controls id="ccw" class="video-js"  preload="none"  data-setup='{ "fluid": true}'  data-bind="attr: {  autoplay: 'true', loop: 'true', poster:'/plugin/mgsetup/static/img/ccwposter.jpg' }, if:  maintenancePage() == 6" onclick="this.paused ? this.play() : this.pause();">
    <source src="/plugin/mgsetup/video/ccw.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
    </video>



<hr />

If the entire Zigzag pattern was loose or not adhered to the bed at all, the bed leveling screw needs to be tightened by turning it clockwise, to raise the bed at this position.<br><br>


   <video controls id="cw" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true', poster:'/plugin/mgsetup/static/img/cwposter.jpg'}, if:  maintenancePage() == 6" onclick="this.paused ? this.play() : this.pause();" >
    <source src="/plugin/mgsetup/video/cw.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
    </video>

<hr />

A quarter-turn should be the largest adjustment made between tests.<br><br>
Note: All positions wait for the bed and hotend temperatures to stabilize before starting, so it may take a moment to begin printing.<br><br>


<img src="/plugin/mgsetup/static/img/10.jpg">
<p> You should make the fewest number of adjustments required to make all four of your Zigzag patternes look the same. If all of the corners are different, or you are unsure, set each pattern so that it peels with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments.
</p>

<center>
<img src="/plugin/mgsetup/static/img/cornerlabels.png"><br><br>
<div style="width:80%">
<button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton() , click: function() {$root.printWiggleConfirm(20); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 1</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(3); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 2</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(4); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 3</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(5); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 4</button>
</div>
<button class="btnstay" style="width:80%;" data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm('all'); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">All</button><br><br>

<p>

 When all 4 Zigzag patterns are the same, your bed is level.
</p>

<button class="btngoBig" data-bind="enable: $root.stepSixWigglePrinted(), click: function() { $root.stepSixPrepared(false); $root.stepSixWigglePrinted(false); window.scroll(0,0) }">Done</button>
</center>
</div>


{#      88     ,a8888a,     
      ,d88   ,8P"'  `"Y8,   
    888888  ,8P        Y8,  
        88  88          88  
        88  88          88  
        88  `8b        d8'  
        88   `8ba,  ,ad8'   
        88     "Y8888P"     #}
<div id="ten" data-bind="visible: loginState.isUser && maintenancePage()===10">


<h1 style="text-align:left;">Cold Bed Leveling</h1>

Click <strong>Prepare</strong> to begin the Cold Bed Leveling process:<br><br><div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.untouchable()">
<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.<br><br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>
<br>
<center><button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button></center>
</div>
<center><button class="btnstay" data-bind="enable: !$root.untouchable(), click: function() { $root.coldLevelCheck(0)}">Prepare</button><br><br></center>
Once the printer has stopped moving, use the <strong> Bed Height Buttons</strong> below to move the bed up until the feeler gauge is just caught between the tip of the nozzle and bed.


    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 1mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.untouchable(), click: function() { $root.sendJogCommand('z',-1,1) }"><i class="icon-arrow-up"></i></button>
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.untouchable(), click: function() { $root.sendJogCommand('z',1,1) }"><i class="icon-arrow-down"></i></button>
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.1mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.untouchable(), click: function() { $root.sendJogCommand('z',-1,0.1) }"><i class="icon-arrow-up"></i></button>
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.untouchable(), click: function() { $root.sendJogCommand('z',1,0.1) }"><i class="icon-arrow-down"></i></button>
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.01mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.untouchable(), click: function() { $root.sendJogCommand('z',-1,0.01) }"><i class="icon-arrow-up"></i></button>
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.untouchable(), click: function() { $root.sendJogCommand('z',1,0.01) }"><i class="icon-arrow-down"></i></button>
        </div>
    </div>
<br><br><br>
Once at that position, click "Next Corner" to check each corner in turn.  At each Corner, adjust the Bed Leveling Screw until the feeler gauge just catches between the nozzle and bed - turning the screw Clockwise will raise the bed, while turning the screw Counter-Clockwise will lower the bed.
<br><br><br><center>
<button class="btnstay" data-bind="enable: !$root.untouchable(), click: function() { $root.coldLevelCheck('next')}">Next Corner</button></center>
<br><br>
Once you've gone around at least once, your bed should be level enough to print.  However, we recommend a second full pass of all four corners for optimal print quality.

</div>




    </div>



      {#               
              
 I8a    a8I   
  "Yb,,dP"    
aaaa8888aaaa  
""""8888""""  
  ,dP'`Yb,    
 I8"    "8I   
              
              
               #}
    <div role="tabpanel" class="tab-pane" id="filamentLoading">
	<div><input type="radio" name="maintenancePageSelect" value=18 data-bind="checkedValue: 18, checked: maintenancePage, click: window.scroll(0,0)" /> Extruder 0 Filament Control</div>
	<div data-bind="visible: $root.isDual()"><input type="radio" name="maintenancePageSelect" value=19 data-bind="checkedValue: 19, checked: maintenancePage, click: window.scroll(0,0)" /> Extruder 1 Filament Control</div>

<br><hr />


<div data-bind="visible: maintenancePage()===18">

Both "Prepare" buttons will position the printer and start heating the Extruder to the target temperature (220 °C for PLA, 260 °C for ABS).  Once the target temperature has been reached, you can Retract and Extrude filament as needed.
<center><button  class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() , click: function() { $root.sendMaintenancePreheat('T0',220) }">{{ _('Prepare at PLA Extruder Temperature') }}</button></center><br><br>
<center><button  class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() , click: function() { $root.sendMaintenancePreheat('T0',260) }">{{ _('Prepare at ABS Extruder Temperature') }}</button></center><br><br>

<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="">
<br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
</div>
</div>
<br>

</div>
<br><br>

<center><button title="Retract 75 mm of Filament" class="btnstay" data-bind="enable: $root.lockButton(), click: function() { $root.retractFilament('tool0'); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Retract Filament</button></center><br><br>

<center><button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.lockButton(), click: function() { $root.feedFilament('tool0'); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Extrude Filament</button></center>










</div>








<div data-bind="visible: maintenancePage()===19">

Both "Prepare" buttons will position the printer and start heating the Right Extruder to the target temperature (220 °C for PLA, 260 °C for ABS).  Once the target temperature has been reached, you can Retract and Extrude filament as needed.
<center><button  class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() , click: function() { $root.sendMaintenancePreheat('T1',220) }">{{ _('Prepare at PLA Extruder Temperature') }}</button></center><br><br>
<center><button  class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() , click: function() { $root.sendMaintenancePreheat('T1',260) }">{{ _('Prepare at ABS Extruder Temperature') }}</button></center><br><br>

<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="">
<br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Extruder Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayTool1Temp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
</div>
</div>
<br>

</div>
<br><br>

<center><button title="Retract 75 mm of Filament" class="btnstay" data-bind="enable: $root.lockButton(), click: function() { $root.retractFilament('tool1'); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Retract Filament</button></center><br><br>

<center><button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.lockButton(), click: function() { $root.feedFilament('tool1'); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Extrude Filament</button></center>



</div>











    </div>








  {#               
              
 I8a    a8I   
  "Yb,,dP"    
aaaa8888aaaa  
""""8888""""  
  ,dP'`Yb,    
 I8"    "8I   
              
              
               #}
    <div role="tabpanel" class="tab-pane" id="dualOffsets">
	<div><input type="radio" name="maintenancePageSelect" value=9 data-bind="checkedValue: 9, checked: maintenancePage, click: window.scroll(0,0)" /> T1 Cold/Mechanical Height Adjustment</div>
	<div><input type="radio" name="maintenancePageSelect" value=11 data-bind="checkedValue: 11, checked: maintenancePage, click: window.scroll(0,0)" /> T1 Hot/Firmware Z Offset</div>
    <div><input type="radio" name="maintenancePageSelect" value=14 data-bind="checkedValue: 14, checked: maintenancePage, click: window.scroll(0,0)" /> Dual X Offset Calibration</div>
    <div><input type="radio" name="maintenancePageSelect" value=15 data-bind="checkedValue: 15, checked: maintenancePage, click: window.scroll(0,0)" /> Dual Y Offset Calibration</div>
    <br><hr />

{#   ad88888ba   
    d8"     "88  
    8P       88  
    Y8,    ,d88  
     "PPPPPP"88  
             8P  
    8b,    a8P   
    `"Y8888P'    #}

{# Physical T1 Height Adjustment - By Hand #}

<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && maintenancePage()===9">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder1-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===9" />
    </div><br>

In this step, we will physically adjust the height of the Right Extruder (T1) in the mounting plate.  The system is already calibrated for Extruder 0's height, so we will adjust Extruder 1 to match that as closely as possible.
<br><br>This adjustment process involves mechanical calibration between both extruders, and can take some time. However, following the instructions carefully will reward you with high quality dual-material prints.<br><br>

<strong>Before proceeding, remove any material from the tip of the T1 nozzle to ensure accurate height adjustment.</strong><br><br>




<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.maintenancePage()===9">
Click <strong>Cooldown</strong> to turn off all heaters if necessary.<br><br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>
<br>
<center><button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button></center>
</div><br>

Ensure that the T1 extruder is below 50°C, then loosen the clamping bolt that secures the T1 hot end. Apply gentle pressure to slide the T1 hot end upward into the mounting plate as far as possible, and then gently secure the clamping bolt. Now click "Move to Position" to move the build plate to the correct position.<br><br>
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-1.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===9" />
</div>
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-2.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===9" />
</div><br>

<center><button style="width:100%;" class="btnstay" data-bind="enable: loginState.isUser && !$root.untouchable() && !$root.stepNineAtPosition(), click: function() { $root.dualRightNozzleAdjust('simple'), $root.stepNineAtPosition(true) }">Move to Position<br /></button></center><br><br>

Ensure that all components (Extruders 0 and 1 and the Build Plate) are at room temperature before touching any of the printer’s components.
<br><br>

<br><br>
<ol>
    <li>Now move the feeler gauge under the tip of the T1 nozzle.
    <li>Loosen the T1 clamping bolt until the T1 hot end slides downward and touches the bed.
    <li>Secure the T1 clamping bolt.
</ol><br>
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-3.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===9" />
</div>
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-4.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===9" />
</div><br><br>
<strong><center>Tighten the clamping bolt completely - this is a safety hazard if not secured.</center></strong>
<br><br><center><button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.stepNineAtPosition(), click: function() { $root.dualRightNozzleAdjust('3-maintenance'); window.scroll(0,0) }">Extruder 1 is touching feeler gauge<br /></button></center>
</div>
    {#      88      88  
      ,d88    ,d88  
    888888  888888  
        88      88  
        88      88  
        88      88  
        88      88  
        88      88  #}

{# EEPROM Adjust EXT1 Hotend Offset #}
<div data-bind="visible: loginState.isUser && maintenancePage()===11">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder1-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===11" />
    </div><br>

<h1 style="text-align:left">Verify T1 Starting Height</h1>





<p>
   
    <i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i> The printer's Right Extruder (T1) and build platform are hot - do not touch them!
</p>

<p>
    In this step you will print a small pattern on the build platform. We'll call this pattern a <em>Zigzag pattern</em> in the future. The Zigzag pattern will help you to verify your starting height. 
</p>

<p>
    When you click "Print Zigzag Pattern" the printer will perform the following actions
</p>

<ol>
    <li>Wait for the Extruder and build platform to reach their target temperatures. (The printer will not move while it waits. You can see the actual temperatures in red and the target temperatures in black below the "Print Zigzag Pattern" button)
    <li>Move to its home position
    <li>Move to its printing position
    <li>Print a small amount of material off the side of the bed
    <li>Print a Zigzag pattern in the middle of the bed with Tool 1
    <li>Move to its final position
</ol>


<p>
    When you are ready, click "Print Zigzag Pattern"
</p>
<br>

<center><button class="btnstay" data-bind="enable: !$root.stepElevenFirstWiggleClicked(), click: function() { $root.printWiggleConfirm('T1-maintenance'); $root.enableLockedButton(8000) }">Print Zigzag Pattern</button></center><br>



<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>

Once the Zigzag pattern has printed, and the printer has fully parked, you can use your tweezers to remove any material on the side of the bed. Next, carefully remove the Zigzag pattern by using your tweezers to lift it off the bed from the rear left "tail".  How the Zigzag pattern comes off the bed tells us if the bed is level at this position:<br><br>


   
   <video controls id="filamentVideo1" class="video-js"  preload="none"     data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/wiggleposter.jpg'}, if:  maintenancePage() == 11" onclick="this.paused ? this.play() : this.pause();">
    <source src="/plugin/mgsetup/video/wiggleMiddle.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
    </video>




<p >
    <strong style="font-size:20px;" >Which of the following options best describes your Zigzag pattern? Click the photos to zoom in.</strong>
</p>



<table>
    <tr>
        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">
            <a href="/plugin/mgsetup/static/img/10.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/10.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===11" /></a>
 
        </td>

        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

            <a href="/plugin/mgsetup/static/img/11.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/11.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===11" /></a>
 
        </td>
 



        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

             <a href="/plugin/mgsetup/static/img/12.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/12.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===11" /></a>
         </td>
 
    </tr>




    <tr>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
            If the  Zigzag pattern peels off with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments, you have <strong>a perfect Starting Height</strong>. Click below to proceed to the next step. 
            <br />




            <br />

            <strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. 


             
        </td>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
                If the Zigzag pattern peels-off as an even strand made with no small section of connected segments at the end, <strong>the Starting Height is too low</strong>. Click below to adjust the starting height and print a new zigzag. 
           <!-- <br />
            <br />

            <strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. -->

        </td>
        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
     
            If the Zigzag pattern peels-off in one solid piece, with most/all segments of the zig-zag pattern connected, 
             <strong>the Starting Height is too high</strong>. Click below to adjust the starting height and print a new zigzag. 



        </td>
    </tr>

    <tr>

        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
            
            <center><button style="width:100%;" class="btngoBig" data-bind="enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.setupSetStartingHeight('T1-maintenance'); window.scroll(0,0) }">Save Starting Height<br /></button></center>

  <!--Too far-->
        </td>


        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
<div data-bind="visible: $root.stepElevenShowFineAdjustments()==false"><br>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==false, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',-0.04); $root.enableLockedButton(10000) }">Adjust by 0.04 mm and Print</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',-0.02); $root.enableLockedButton(10000) }">Adjust by 0.02 mm and Print</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',-0.01); $root.enableLockedButton(10000) }">Adjust by 0.01 mm and Print</button></center>            

        </td>


        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
            <div data-bind="visible: $root.stepElevenShowFineAdjustments()==false"><br>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==false, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.04); $root.enableLockedButton(10000) }">Adjust by 0.04 mm and Print</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.02); $root.enableLockedButton(10000) }">Adjust by 0.02 mm and Print</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.01); $root.enableLockedButton(10000) }">Adjust by 0.01 mm and Print</button></center>  
            <!--Too Close-->
        </td>
    <tr>

</table>
<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true, enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2'); $root.enableLockedButton(10000) }">Print This Zigzag Again</button><br>

<input type="checkbox" data-bind="checked: $root.stepElevenShowFineAdjustments" /> Show Advanced Options.



  </div>

{#      88          ,d8    
      ,d88        ,d888    
    888888      ,d8" 88    
        88    ,d8"   88    
        88  ,d8"     88    
        88  8888888888888  
        88           88    
        88           88    #}

{# Imperfection in Both Prints Requires X/Y Calibration #}
<div data-bind="visible: loginState.isUser && maintenancePage()===14">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/both-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===14" />
    </div><br><br>
    <p>
    In this step we will calibrate the distance between the 2 extruders on the X axis. To do this we will use both extruders to print a series of 'sawteeth' and choose which one is best aligned. We will repeat this process until the X axis is completely calibrated.
    </p>



        Click "Print First Pattern” when you are ready to begin.
        <br><br><center><button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 0, click: function() { $root.printSawBinConfirm() }">Print First Pattern</button>
        {# <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 1, click: function() { $root.printSawBinConfirm() }">Print X-Axis Pattern 2</button>
        <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 2, click: function() { $root.printSawBinConfirm() }">Print X-Axis Pattern 3</button> #}</center><br>



    <p>
        It may take a few minutes for each pattern to begin printing, as the printer will wait until the heated bed and extruders have reached their target temperatures:<br>
    </p>

<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>

<p>
    Once both extruders have printed the pattern, choose from positions 1 – 5 to identify which set of 'sawteeth' are most closely aligned. 
    The ideal result will show perfectly-aligned features for position number 3 — if positions 1, 2, 4, or 5 are selected, the printer will automatically adjust the X offset before prompting you print the same pattern again.
</p>
<p>
    Once you’ve achieved alignment at position 3, you’ve reached the target position. Next, we'll follow the same procedure two more times, using finer tolerances each time. After completing the third procedure, you will automatically be sent ot the next step.
</p>



<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 0">Pattern 1: Coarse Adjustment</div>
<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 1">Pattern 2: Medium Adjustment</div>
<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 2">Pattern 3: Fine Adjustment</div>
<center>
<div class="fileupload-new thumbnail" style="width: 95%; " data-bind="visible: $root.isDual">
        {# <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/x-bin-zoom.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===14 && $root.calibrationStep() < 1" /> #}
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/x-saw-zoom.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===14 && $root.calibrationStep() > -1" />
</div></center><br>
<br>
<center>
{# <span data-bind="text: 'Which bin is closest to having the sawtooth perfectly centered?', visible: $root.calibrationStep() < 1"></span> #}
<span data-bind="text: 'At which position (1-5) are the vertical lines most closely aligned?', visible: $root.calibrationStep() > -1"></span>
</center><br><br>
<center><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 1), click: function() { $root.printSawBinConfirm(1) }">1</button><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 2), click: function() { $root.printSawBinConfirm(2) }">2</button><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 3), click: function() { $root.printSawBinConfirm(3) }">3</button><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 4), click: function() { $root.printSawBinConfirm(4) }">4</button><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 5), click: function() { $root.printSawBinConfirm(5) }">5</button></center>


</div>
{#      88  8888888888   
      ,d88  88           
    888888  88  ____     
        88  88a8PPPP8b,  
        88  PP"     `8b  
        88           d8  
        88  Y8a     a8P  
        88   "Y88888P"   #}

{# Y Calibration #}
<div data-bind="visible: loginState.isUser && maintenancePage()===15">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/both-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===15" />
    </div><br><br>
    <p>
    In this step we will calibrate the distance between the 2 extruders on the Y axis. To do this we will use both extruders to print a series of 'sawteeth' and choose which one is best aligned. We will repeat this process until the Y axis is completely calibrated.
    </p>

    Click "Print First Pattern” when you are ready to begin.
    <br><br><center>
    <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 0, click: function() { $root.calibrationAxis('Y'),  $root.printSawBinConfirm() }">Print First Pattern</button>
    {# <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 1, click: function() { $root.printSawBinConfirm() }">Print Y-Axis Pattern 2</button>
    <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 2, click: function() { $root.printSawBinConfirm() }">Print Y-Axis Pattern 3</button> #}</center><br>

    <p>
    It may take a few minutes for each pattern to begin printing, as the printer will wait until the heated bed and extruders have reached their target temperatures:
    </p>

<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>

<p>
    Once both extruders have printed the pattern, choose from positions 1 – 5 to identify which set of 'sawteeth' are most closely aligned. 
    The ideal result will show perfectly-aligned features for position number 3 — if positions 1, 2, 4, or 5 are selected, the printer will automatically adjust the Y offset before prompting you print the same pattern again.
</p>
<p>
    Once you’ve achieved alignment at position 3, you’ve reached the target position. Next, we'll follow the same procedure two more times, using finer tolerances each time. After completing the third procedure, you will automatically be sent ot the next step.
</p>



<br>
<center>
{# <span data-bind="text: 'Which bin is closest to having the sawtooth perfectly centered?', visible: $root.calibrationStep() < 1"></span> #}
<span data-bind="text: 'At which position (1-5) are the horizontal lines most closely aligned?', visible: $root.calibrationStep() > -1"></span></center><br>
<div style="font-size:20px;" data-bind="visible: $root.calibrationStep() === 0">Pattern 1: Coarse Adjustment</div>
<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 1">Pattern 2: Medium Adjustment</div>
<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 2">Pattern 3: Fine Adjustment</div>
<div>

<div style="width: 100%; margin:auto;vertical-align: middle; " data-bind="visible: $root.isDual">
<div style="display: inline-block; width:75%">
        {# <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/y-bin-zoom.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===15 && $root.calibrationStep() < 1" /> #}
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/y-saw-zoom.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===15 && $root.calibrationStep() > -1" />
        </div>
<div style="display: inline-block; width:20%; vertical-align: middle; ">
<button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 5), click: function() { $root.printSawBinConfirm(5) }">5</button>
<br><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 4), click: function() { $root.printSawBinConfirm(4) }">4</button>
<br><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 3), click: function() { $root.printSawBinConfirm(3) }">3</button>
<br><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 2), click: function() { $root.printSawBinConfirm(2) }">2</button>
<br><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 1), click: function() { $root.printSawBinConfirm(1) }">1</button>
</div>
</div>
</div><br><br>


</div>
</div>


</div>
<br><br><br><br><Br>
{#                  
       ,a8888a,     
     ,8P"'  `"Y8,   
    ,8P        Y8,  
    88          88  
    88          88  
    `8b        d8'  
     `8ba,  ,ad8'   
       "Y8888P"     
                    
                  #}
{# Welcome #}

<div data-bind="visible: maintenancePage()===17">

<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && maintenancePage()===0">
<center>
    <h3>Welcome to the MakerGear M3 Quick Start Plugin!</h3>
    <br><br></center>


    <div data-bind="visible: ($root.googleGood()===-1)"><p>    We're currently checking your Internet Connection Status.</p>
    </div>
    <div data-bind="visible: $root.googleGood()===0"> 
        <p>
            You are <span style="color:red"> NOT </span> connected to the Internet. Please connect an Ethernet cable or use the "Wireless Configuration" button below to connect your M3 3D Printer to an Internet enabled network.
                        <center><button style="width:150px;height:100px;" class="btngo" data-bind="visible: loginState.isUser, click: function() {$root.showSettings()}">
                        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/wifiWhite.png', 'width': '50px',} , visible: loginState.isUser && (maintenancePage()===0)" />
                        <br />Wireless Configuration</button></center>
                        <br />
            <button data-bind="click: function() { $root.checkGoogle() }"> Check Internet Connection Again</button><br>
        </p>
    </div> 
    <div data-bind="visible: $root.googleGood()===1">
        <p>
            You are connected to the Internet - please proceed to Quick Check 
        </p>
    </div>
<hr />

    Designed to ensure consistent machine performance, the Quick Check process is a software-assisted procedure used for periodic verification of the MakerGear M3’s calibration (10-20 minutes). If Quick Check determines that your MakerGear M3 requires recalibration, you will proceed to a comprehensive calibration process (20-40 minutes) that will help maintain the performance benefits of True-Leveling on your MakerGear M3.<br><br><center>
    
                <center> <button style="width:150px;height:100px;" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.preflightDialog.modal('show') ; window.scroll(0,0); $root.cooldown() }"><span class="icon-gear" style="font-size:40px;"></span><br /> {{ _('Begin Quick Check') }}</button></center>
<hr />
<br />
                <center> <button style="width:150px;height:100px;" class="btngo"  onClick="window.open('https://makergear.zendesk.com/hc/en-us/categories/115000563646-M3','_blank','menubar=yes,resizable=yes,height=520,width=740'); return false;" ><span class="icon-book" style="font-size:40px;"></span><br /> {{ _('Knowledge Base') }}</button></center>
</div>
</center>

{#        88    #}
{#      ,d88    #}
{#    888888    #}
{#        88    #}
{#        88    #}
{#        88    #}
{#        88    #}
{#        88    #}

{# STARTING HEIGHT CHECK #}
<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && maintenancePage()===1">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===1" />
    </div><br>

<h1 style="text-align:left;">Starting Height Check</h1>
<p style="text-align:left;">
During the next few steps, you will verify the printer's starting height. First, we'll use a simple visual test to perform a safety check. Click <strong>Prepare</strong> to move the printer to its testing position.<br><br>
</p>

<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2); display:block; " data-bind="visible:$root.untouchable()">
<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.<br><br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>
<br>
<center><button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button></center>
</div>


<center>
<button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepOnePrepared() && !$root.untouchable(), click: function() { $root.setupCheckLevel(0); $root.stepOnePrepared(1) }">{{ _('Prepare') }}</button><br><br>
<p style="">
<div data-bind="visible: $root.isDual()">
Once the printer has stopped moving, use your hand to slide the Extruder towards the build surface. If the Left Extruder (T0) nozzle touches the glass, do not force the T0 extruder any further.
</div>
<div data-bind="visible: !$root.isDual()">
    Once the printer has stopped moving, use your hand to slide the Extruder towards the build surface. If the nozzle hits the glass, do not force the Extruder any further. 
</div>
</p>
<p >
    <span style="text-align:left;font-size:20px;" >Which of the following options best describes your current Extruder starting height? Click the photos to zoom in.</span>
</p>
</center>
<table>
    <tr>
        <td style="width:33%;padding:10px;border:2px solid #ddd;">
<div data-bind="visible:!$root.isDual()">
<a href="/plugin/mgsetup/static/img/6.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/6.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===1" /></a></div>
<div data-bind="visible:$root.isDual()">
<a href="/plugin/mgsetup/static/img/15.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/15.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===1" /></a></div>
        <button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepOnePrepared(), click: function() { $root.goTo('2'); window.scroll(0,0) }">{{ _('The nozzle hits the bed <br />') }}</button>
        </td>
        <td style="width:33%;padding:10px;border:2px solid #ddd;">
<div data-bind="visible:!$root.isDual()">
<a href="/plugin/mgsetup/static/img/4.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/4.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===1" /></a></div>
<div data-bind="visible:$root.isDual()">
<a href="/plugin/mgsetup/static/img/17.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/17.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===1" /></a></div>
        <button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepOnePrepared(), click: function() { $root.goTo('3'); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a small gap(.5 mm or less)') }}</button>
        </td>
        <td style="width:33%;padding:10px;border:2px solid #ddd;">
<div data-bind="visible:!$root.isDual()">
<a href="/plugin/mgsetup/static/img/5.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===1" /></a></div>
<div data-bind="visible:$root.isDual()">
<a href="/plugin/mgsetup/static/img/19.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/19.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===1" /></a></div>
        <button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepOnePrepared(), click: function() { $root.goTo('2'); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a large gap (more than .5 mm)') }}</button>
        </td>
    </tr>
</table>
</div>




{#     ad888888b,    #}
{#    d8"     "88    #}
{#            a8P    #}
{#         ,d8P"     #}
{#       a8P"        #}
{#     a8P'          #}
{#    d8"            #}
{#    88888888888    #}

{# Adjust Starting Height #}

<div id="control-jog-custom" style="clear: both; display: none;" data-bind="visible: loginState.isUser  && maintenancePage()===2">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===2" />
    </div><br>
<h1>Adjust Starting Height </h1>

Here we will adjust the rough starting height of the printer (in a future step we will fine-tune your starting height).  Click <strong>Prepare</strong> to move the printer to its testing position.<br><br>
<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.untouchable()">
<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.<br><br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>
<br>
<center><button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button></center>
</div>
<center><button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !$root.untouchable() && !isPrinting() && loginState.isUser() && !$root.stepTwoPrepared(), click: function() { $root.setupSetStartingHeight(0) ; $root.stepTwoPrepared(1) }">{{ _('Prepare') }}</button></center><br>
<div data-bind="visible:!$root.isDual()">
During this step, you'll use the <strong>Bed Height Buttons</strong> below to adjust the distance between the nozzle and the glass build plate.
</div>
<div data-bind="visible: $root.isDual()">
During this step, you'll use the <strong>Bed Height Buttons</strong> below to adjust the distance between the Left Extruder (T0) nozzle and the glass build plate.
</div>
 When this step is completed you should be able to slide the blue feeler gauge between the nozzle and glass with very little resistance.
<p>
    First, press the "1 mm Up" button as you are watching the bed. You will see the bed move 1 mm towards the nozzle. Slowly repeat this process until the build plate is within 1 mm of the nozzle. NOTE: In order to prevent the nozzle from colliding with the build plate, you should not use the "1 mm Up" button when the nozzle is within 1 mm of the build plate. The "1 mm Up" button may become disabled to prevent collision - in this case use the "0.1 mm Up" button to continue. 
</p>

<p>
<div data-bind="visible: !$root.isDual()">
    Now place the blue feeler gauge between the nozzle and the build plate, then click the "0.1 mm Up” button to bring the build plate even closer to the nozzle. As soon as you can sense that the feeler gauge is stuck between the nozzle and build plate, click the "0.1 mm Down” button once to move the build plate down until the feeler gauge is able to move freely between the nozzle and build plate.
</div>
<div data-bind="visible: $root.isDual()">
    Now place the blue feeler gauge between the nozzle and the build plate, then click the "0.1 mm Up” button to bring the build plate even closer to the T0 nozzle. As soon as you can sense that the feeler gauge is stuck between the nozzle and build plate, click the "0.1 mm Down” button  to move the build plate down until the feeler gauge is able to move freely between the nozzle and build plate.
</div>
</p>

<p>
    Next, click the "0.01 mm Up” button to move the bed up until you begin to feel resistance while sliding the feeler gauge between the build plate and nozzle. Once this is completed, click "Save New Starting Height"
</p>


<div class="fileupload-new thumbnail" style="width: 95%; ">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/13.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===2" /><center>
        </center>
    </div><br>
    <div data-bind="visible: !$root.hideDebug()"><br>Original Z Offset : <span data-bind="text: $root.ZOffset"></span><br></div>
Current Z Position : <span data-bind="text: $root.ZPos"></span>
<div data-bind="visible: !$root.hideDebug()"><br>Fresh data : <span data-bind="text: $root.ZPosFresh"></span></div><br>

<!-- Z jogging control panel -->


<h4>Bed Height Buttons</h4>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 1 mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.ZPos() > 1, click: function() { $root.sendJogCommand('z',-1,1) }"><i class="icon-arrow-up"></i></button> 1 mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',1,1) }"><i class="icon-arrow-down"></i></button> 1 mm Down
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.1 mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',-1,0.1) }"><i class="icon-arrow-up"></i></button> .1 mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',1,0.1) }"><i class="icon-arrow-down"></i></button> .1 mm Down
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.01 mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',-1,0.01) }"><i class="icon-arrow-up"></i></button> .01 mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared(), click: function() { $root.sendJogCommand('z',1,0.01) }"><i class="icon-arrow-down"></i></button> .01 mm Down
        </div>
    </div>




<br><br><br><br><br> <br><br><br>  <br>    

<center><button id="control-yinc" class="btnstayBig" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && !$root.stepTwoStartingHeightSaved(), 
click: function() { $root.setupSetStartingHeight(1); $root.stepTwoStartingHeightSaved(true); $root.goTo('3'); window.scroll(0,0) }">{{ _('Save New Starting Height') }}</button></center>
<br><br>

{# <center><button class="btngoBig" data-bind="enable: $root.stepTwoPrepared && $root.stepTwoStartingHeightSaved(), click: function() { $root.goTo('3'); window.scroll(0,0) }">Next Step</button></center> #}

<br><br></div>


{#     ad888888b,    #}
{#    d8"     "88    #}
{#            a8P    #}
{#         aad8"     #}
{#         ""Y8,     #}
{#            "8b    #}
{#    Y8,     a88    #}
{#     "Y888888P'    #}

{# Filament Loading #}

<div id="eleven" data-bind="visible: loginState.isUser && maintenancePage()===3">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===3" />
    </div><br>
<h1 style="text-align:left">Extrude Filament</h1>


<p>
<div data-bind="visible:!$root.isDual()">
Now you need to load filament into your extruder. 
</div>
<div data-bind="visible: $root.isDual()">
Now you need to load filament into your Left Extruder (T0). 
</div>
    Now you need to load filament into your extruder. 
    When you click "Prepare" the printer will perform the following actions:
</p>

<ol>
    <li>Move the heated build platform down to its home position
    <li>Move the X and Y axes to their home positions
    <li>Start heating the printer's hot end
    <li>Start heating the printer's heated build platform.
</ol>

<p>
    Click 'Prepare' and then continue reading the instructions while you wait for your printer to heat up.
</p>

<p>

    <i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i>

    Your extruder will begin to get very hot.  Your build surface will also start to heat up.  (You'll need your build surface to be heated for the next step and it can take a few minutes for it to heat up).  Do not touch the extruder's nozzle or the build surface.
</p>


<center><button  id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepThreeStartHeatingClicked(), click: function() { $root.sendWigglePreheat(); $root.stepThreeStartHeatingClicked(true) }">{{ _('Prepare') }}</button></center><br><br>

Now we’ll prepare to load filament, if you have not already, while waiting for your M3 to heat up.
<br><br>



Place the PLA filament spool on the spool holder so that the loose end points directly upwards into the filament guide. You may need to flip your spool in order to achieve the proper orientation. Cut the end of the filament so that the tip is flat.

<br /><br />


Feed the tip of your filament up through the black filament guide and the clear filament guide tube.

<video controls id="filamentVideo1" class="video-js"  preload="none"  data-setup='{"fluid": true, "controls":true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad1Poster.jpg'}, if:  maintenancePage() == 3" onclick="this.paused ? this.play() : this.pause();" vjs-big-play-centered>
    <source src="/plugin/mgsetup/video/filamentLoad1.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
</video>

<br /><br />



 Next insert the filament into the hole on top of the extruder. 

<video controls id="filamentVideo2" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad2Poster.jpg'}, if:  maintenancePage() == 3" onclick="this.paused ? this.play() : this.pause();">
    <source src="/plugin/mgsetup/video/filamentLoad2.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
</video>
<br /><br />

Below you can see your extruder temperature. Once the extruder temperature matches the target temperature within 2 degrees,  click "Feed Filament" to start loading filament. You may need to apply slight downward pressure on the filament to get started. Once the filament has started to feed, you should feel it being pulled into the extruder. 

<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>

<br>
<center><button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.stepThreeStartHeatingClicked() && $root.lockButton(), click: function() { $root.feedFilament(); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Feed Filament</button></center>
<br>
Continue clicking "Feed Filament" until a thin strand of filament is consistently extruding from the tip of the nozzle. Use your tweezers to remove the hot filament after it has been extruded. <br><br>

Push the filament guide tube down into the plastic extruder hole. 

<video controls id="filamentVideo3" class="video-js" preload="none"   data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad3Poster.jpg'}, if:  maintenancePage() == 3" onclick="this.paused ? this.play() : this.pause();">
    <source src="/plugin/mgsetup/video/filamentLoad3.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
</video>

Once filament is consistently extruding, click to "Next Step" proceed:<br>
<center><button class="btngoBig" data-bind="visible: loginState.isUser, click: function() { $root.goTo('4'); window.scroll(0,0) }">Next Step</button></center>
</div>


{#            ,d8    #}
{#          ,d888    #}
{#        ,d8" 88    #}
{#      ,d8"   88    #}
{#    ,d8"     88    #}
{#    8888888888888  #}
{#             88    #}
{#             88    #}

{# Verify Starting Height (Wiggle) #}

<div id="wiggle-section" class="jog-panel" style="display:none;" data-bind="visible: loginState.isUser && maintenancePage()===4">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" />
    </div><br>

<h1 style="text-align:left">Verify Starting Height</h1>





<p>
   
    <i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i><div data-bind="visible:!$root.isDual()">
The printer's extruder and build platform are hot - do not touch them!
</div>
<div data-bind="visible: $root.isDual()">
The printer's Left Extruder (T0) and build platform are hot - do not touch them! 
</div>

</p>

<p>
    During this step, you will print a small Zigzag pattern that will help you to gauge, adjust and perfect your starting height (also known as "Z Offset"). 
</p>

<p>
    Clicking the "Print Zigzag Pattern" button will trigger the following printer tasks:
</p>

<ol>
    <li>Start to heat the extruder and build platform to their target temperatures — you will see actual temperatures shown in red and target temperatures shown in black directly below the "Print Zigzag Pattern" button.
    <li>Move components to their home positions.
    <li>Move extruder to its purge position.
    <li>Purge and wipe the extruder on the lower right-hand corner of the build plate.
    <li>Print a Zigzag pattern on the center of the build plate.
    <li>Move components to their final position.
</ol>


<p>
    When you are ready to begin this process, click "Print Zigzag Pattern":
</p>
<br>

<center><button class="btnstay" data-bind="enable: !$root.stepFourFirstWiggleClicked(), click: function() { $root.printWiggleConfirm(1); $root.enableLockedButton(8000) }">Print Zigzag Pattern</button></center><br>



<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>

Once the Zigzag pattern has printed, and the printer has fully parked, you can use your tweezers to remove any material on the side of the bed. Next, carefully remove the Zigzag pattern by using your tweezers to lift it off the bed from the rear left "tail".  The  Zigzag pattern will peel off of the build plate differently according to the printer's current starting height.<br><br>


   
   <video controls id="filamentVideo1" class="video-js"  preload="none"     data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/wiggleposter.jpg'}, if:  maintenancePage() == 4" onclick="this.paused ? this.play() : this.pause();">
    <source src="/plugin/mgsetup/video/wiggleMiddle.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
    </video>

<br />


<p >
    <strong style="font-size:20px;" >Which of the following options best describes your Zigzag pattern? Click the photos to zoom in.</strong>
</p>



<table>
    <tr>
        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">
            <a href="/plugin/mgsetup/static/img/10.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/10.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" /></a>
 
        </td>

        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

            <a href="/plugin/mgsetup/static/img/11.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/11.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" /></a>
 
        </td>
 



        <td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

             <a href="/plugin/mgsetup/static/img/12.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/12.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===4" /></a>
         </td>
 
    </tr>




    <tr>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
            If the  Zigzag pattern peels off with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments, you have <strong>a perfect Starting Height</strong>. Click below to proceed to the next step. 
            <br />




            <br />

            <strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. 


             
        </td>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
                If the Zigzag pattern peels-off as an even strand made with little to no small section of connected segments at the end, <strong>the Starting Height is too low</strong>. Click below to adjust the starting height and print a new zigzag. 
           <!-- <br />
            <br />

            <strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. -->

        </td>
        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
     
            If the Zigzag pattern peels-off in one solid piece, with most/all segments of the zig-zag pattern connected, 
             <strong>the Starting Height is too high</strong>. Click below to adjust the starting height and print a new zigzag. 



        </td>
    </tr>

    <tr>

        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
            
            <center><button style="width:100%;" class="btngoBig" data-bind="enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.setupSetStartingHeight('2'); window.scroll(0,0) }">Next Step<br /></button></center>

  <!--Too far-->
        </td>


        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
<div data-bind="visible: $root.stepFourShowFineAdjustments()==false"><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==false, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button></center>            

        </td>


        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
            <div data-bind="visible: $root.stepFourShowFineAdjustments()==false"><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==false, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button></center><br>
            <center><button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button></center>  
            <!--Too Close-->
        </td>
    <tr>

</table>
<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10); $root.enableLockedButton(10000) }">Print This Zigzag Again</button><br>

<input type="checkbox" data-bind="checked: $root.stepFourShowFineAdjustments" /> Show Advanced Options.


</div>

{#    8888888888   #}
{#    88           #}
{#    88  ____     #}
{#    88a8PPPP8b,  #}
{#    PP"     `8b  #}
{#             d8  #}
{#    Y8a     a8P  #}
{#     "Y88888P"   #}

{# Heated Corner Check (wiggles) #}
<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && maintenancePage()===5">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===5" />
    </div><br>
<center><h1 style="text-align:left;">Heated Corner Check</h1>
    <p>
        In this step you will check if your build surface is level by verifying the vertical alignment of all four corners of your build surface. 
    </p>
    <p>
        Click “Begin Corner Check” to print four Zigzag patterns, one on each corner of your build surface. 
    </p>
<button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepFiveBeginCornerCheckClicked(), click: function() { printWiggleConfirm('all') }">{{ _('Begin Corner Check') }}</button>
<br>
<br />
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>
<p>
    After all four Zigzag patterns have printed, remove each one using your tweezers.
</p>
<hr />
<h1 style="">LOOK CAREFULLY </h1>
<p>
</p>
<p>
</p>
<p>
</p>
<p ></p>
<strong style="font-size:20px;" >Which of the following options best describes the results of your Corner Check? Click the photos to zoom in.</strong></center>
<table class="choiceTable">
    <tr>
        <td>
<a href="/plugin/mgsetup/static/img/5-1.png" data-lightbox="step3"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5-1.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===5" /></a>
        </td>
        <td>
<a href="/plugin/mgsetup/static/img/5-2.png" data-lightbox="step3"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5-2.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===5" /></a>
        </td>
        <td>
 <a href="/plugin/mgsetup/static/img/5-3.png" data-lightbox="step3"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5-3.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===5" /></a>
        </td>
    </tr>
    <tr>
        <td>
            All four zigzag patterns look the same (each pattern should be within 2 strands of each other).
            <br />
            <br />
            <strong>NOTE:</strong> Your zigzag patterns might not match the picture above perfectly - the most important thing is that all four patterens are the same. 
        </td>
        <td colspan="2">
             One or more of the patterns looks different from the other patterns.
            <strong>NOTE:</strong> If you're not sure, or if you had any problems printing the zigzag patterns, click the button below. 
         
        </td>
    </tr>
    <tr>
        <td class="buttonCell">
             <center><button   style="min-height:50px;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepFiveBeginCornerCheckClicked(), click: function() { $root.goTo('7'); window.scroll(0,0) }">{{ _('All four Zigzag patterns are the same.') }}</button></center>
        </td>
        <td colspan="2" class="buttonCell">
            <center><button style="min-height:50px;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepFiveBeginCornerCheckClicked(), click: function() { $root.goTo('6'); window.scroll(0,0) }">{{ _('One or more of the Zigzag patterns is different from the others.') }}</button></center>
        </td>
    </tr>
</table>
</div>

{#      ad8888ba,    #}
{#     8P'    "Y8    #}
{#    d8             #}
{#    88,dd888bb,    #}
{#    88P'    `8b    #}
{#    88       d8    #}
{#    88a     a8P    #}
{#     "Y88888P"     #}

{# Heated Leveling (wiggles) #}

<div id="wiggle-section" class="jog-panel" style="display:none;" data-bind="visible: loginState.isUser && maintenancePage()===6">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===6" />
    </div><br>
<br>




<h1 style="text-align:left;"> Heated Build Platform Leveling</h1>


Here you will be able to print Zigzag patterns in each corner and then adjust the bed leveling screw in that corner until the Zigzag pattern is acceptable. To begin, please click "Prepare" to Home the printer:
<center><button class="btnstay" data-bind="enable: !$root.stepSixPrepared(), click: function() { $root.setupSetStartingHeight('0') ; $root.stepSixPrepared(true) }">Prepare</button></center><br>



<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>


Once the printer has stopped moving, use the four Zigzag pattern position buttons to print in each corner, starting with the corner that was most different from the others in the Four Zigzag pattern print.  After each print, remove the Zigzag pattern with your tweezers. Inspect the Zigzag pattern and use your 2mm allen key to adjust the bed accordingly, as shown below:<br><br>



If the entire Zigzag pattern was completely stuck to the bed, the bed leveling screw needs to be loosened by turning it counter-clockwise, to lower the bed at this position.<br><br>
   
   <video controls id="ccw" class="video-js"  preload="none"  data-setup='{ "fluid": true}'  data-bind="attr: {  autoplay: 'true', loop: 'true', poster:'/plugin/mgsetup/static/img/ccwposter.jpg' }, if:  maintenancePage() == 6" onclick="this.paused ? this.play() : this.pause();">
    <source src="/plugin/mgsetup/video/ccw.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
    </video>



<hr />

If the entire Zigzag pattern was loose or not adhered to the bed at all, the bed leveling screw needs to be tightened by turning it clockwise, to raise the bed at this position.<br><br>


   <video controls id="cw" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true', poster:'/plugin/mgsetup/static/img/cwposter.jpg'}, if:  maintenancePage() == 6" onclick="this.paused ? this.play() : this.pause();" >
    <source src="/plugin/mgsetup/video/cw.mp4" type='video/mp4'>
    <p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
    </video>

<hr />

A quarter-turn should be the largest adjustment made between tests.<br><br>
Note: All positions wait for the bed and hotend temperatures to stabilize before starting, so it may take a moment to begin printing.<br><br>


<img src="/plugin/mgsetup/static/img/10.jpg">
<p> You should make the fewest number of adjustments required to make all four of your Zigzag patternes look the same. If all of the corners are different, or you are unsure, set each pattern so that it peels with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments.
</p>

<center>
<img src="/plugin/mgsetup/static/img/cornerlabels.png"><br><br>
<div style="width:80%">
<button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton() , click: function() {$root.printWiggleConfirm(20); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 1</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(3); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 2</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(4); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 3</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(5); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 4</button>
</div>
<button class="btnstay" style="width:80%;" data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm('all'); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">All</button><br><br>

<p>

 When all 4 Zigzag patterns are the same, you can proceed.
</p>

<button class="btngoBig" data-bind="enable: $root.stepSixWigglePrinted(), click: function() { $root.goTo('7'); window.scroll(0,0) }">Next Step</button>
</center>
</div>


{#    888888888888  #}
{#            ,8P'  #}
{#           d8"    #}
{#         ,8P'     #}
{#        d8"       #}
{#      ,8P'        #}
{#     d8"          #}
{#    8P'           #}

{# Done #}

<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && maintenancePage()===7">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder0-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===7" />
    </div><br>


    <h1 style="text-align:left;">Your First Print</h1>


    <p> 
        In the left <strong>Files</strong> menu, you'll see the file <strong>mgkeychain.stl</strong>. This is a 3D model of a small MakerGear keychain. Before you can print it, you need to generate a GCode version of the file. This GCode file will instruct the printer how to make the 3D Model. To generate the GCode, click on the <span class="icon-magic"></span> icon. You will see the slicing dialog - hit <strong>Slice</strong> to start generating your Gcode. (You can leave all the settings at their default values.)
        <img src="/plugin/mgsetup/static/img/stl.png" style="display:block;width::50%;margin-left:auto;margin-right:auto; margin-top:21px;">
            <br/>
        <img src="/plugin/mgsetup/static/img/slice.png" style="display:block;width::50%;margin-left:auto;margin-right:auto;margin-top:21px;"">

    </p>


    <p style="margin-top:21px;">
        You will see a progress bar, and once the GCode has been generated, you should see 'mgkeychain.gco' with several buttons below it. Press the <span class="icon-print"></span> icon to start your first print.
    </p>
    <img src="/plugin/mgsetup/static/img/gcode.png" style="display:block;width::50%;margin-left:auto;margin-right:auto;margin-top:21px;"">


    <p style="margin-top:21px;">
    <div data-bind="visible:!$root.isDual()">
        Your printer will make sure that the extruder/bed are heated correctly, and then start to print the keychain.  You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 
    </div>
    <div data-bind="visible:$root.isDual()">
        Your printer will make sure that the Left Extruder (T0)/bed are heated correctly, and then start to print the keychain.  You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 
    </div>
    </p>


    <p style="margin-top:21px;" data-bind="visible: !$root.isDual()">
        Learn how to get the most out of your M3 by visiting the  <a href="https://makergear.zendesk.com/hc/en-us/categories/115000563646-M3" target="_blank">M3 Knowledge Base</a>.

    </p>


    <div data-bind="visible: $root.isDual">
    <h1 style="text-align:left;">M3 Independent Dual (M3-ID) Setup</h1>
    To continue on to the (M3-ID) configuration, click "Next":<br>
<center><button class="btngoBig" data-bind="enable: loginState.isUser(), click: function() { $root.goTo('8'); window.scroll(0,0) }">Next</button></center>
</div>
</div>

<!-- Container for custom controls -->

{#                                              
    88888888ba,                             88  
    88      `"8b                            88  
    88        `8b                           88  
    88         88  88       88  ,adPPYYba,  88  
    88         88  88       88  ""     `Y8  88  
    88         8P  88       88  ,adPPPPP88  88  
    88      .a8P   "8a,   ,a88  88,    ,88  88  
    88888888Y"'     `"YbbdP'Y8  `"8bbdP"Y8  88  
                                                
                                              #}


{#   ad88888ba   
    d8"     "8b  
    Y8a     a8P  
     "Y8aaa8P"   
     ,d8"""8b,   
    d8"     "8b  
    Y8a     a8P  
     "Y88888P"   #}

{# Cold Starting Height Check - EXT1 #}


<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && maintenancePage()===8"><center>
<div class="fileupload-new thumbnail" style="width: 95%; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/extruder1-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===8" />
</div></center><br>
<h1 style="text-align:left;">Extruder 1 Starting Height Check</h1>
<p style="text-align:left;">

During the next few steps, you will verify the Right Extruder's (T1) starting height. First, we'll use a simple visual test to perform a safety check.   Click <strong>Prepare</strong> to move the printer to its testing position.
<br><br>






</p><div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.untouchable()">
<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.<br><br>
<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div>
<br>
<center><button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button></center>
</div>
<center>
<button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !$root.untouchable() && !isPrinting() && loginState.isUser() && !$root.stepEightPrepared(), click: function() { $root.dualSetupCheckLevel(0); $root.stepEightPrepared(true) }">{{ _('Prepare') }}</button><br><br>
<p style="">
    Once the printer has stopped moving, use your hand to slide T1 towards the build surface. If the T1 nozzle touches the glass, do not move the T1 extruder any further. 
</p>
<p >
    <span style="text-align:left;font-size:20px;" >Which of the following options best describes your current Extruder 1 starting height? Click the photos to zoom in.</span>
</p>
</center>
<table>
    <tr>
        <td style="width:33%;padding:10px;border:2px solid #ddd;">
<a href="/plugin/mgsetup/static/img/16.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/16.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===8" /></a>
        <button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepEightPrepared(), click: function() { $root.goTo('9'); $root.extOneNeedsPhysical(true); $root.cooldown(); window.scroll(0,0) }">{{ _('The nozzle hits the bed <br />') }}</button>
        </td>
        <td style="width:33%;padding:10px;border:2px solid #ddd;">
<a href="/plugin/mgsetup/static/img/18.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/18.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===8" /></a>
        <button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepEightPrepared(), click: function() { $root.goTo('10'); $root.extOneNeedsPhysical(false); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a small gap(.5 mm or less)') }}</button>
        </td>
        <td style="width:33%;padding:10px;border:2px solid #ddd;">
 <a href="/plugin/mgsetup/static/img/20.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/20.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===8" /></a>
        <button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepEightPrepared(), click: function() { $root.goTo('9'); $root.extOneNeedsPhysical(true); $root.cooldown(); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a large gap (more than .5 mm)') }}</button>
        </td>
    </tr>
</table>
</div>




{#      88     ,a8888a,     
      ,d88   ,8P"'  `"Y8,   
    888888  ,8P        Y8,  
        88  88          88  
        88  88          88  
        88  `8b        d8'  
        88   `8ba,  ,ad8'   
        88     "Y8888P"     #}

{# Load Filament - EXT1 #}

<div id="ten" data-bind="visible: loginState.isUser && maintenancePage()===10">


<h1 style="text-align:left;">Cold Bed Leveling</h1>


Currently an orphan step - basic logic is in place, but full user-guiding logic requires tighter integration, preferably with reduced branches to simplify coding and maintenance.  Mostly a proof of concept that we do have cold per-corner bed leveling in place and can fully implement with little effort.<br><br>
First, Prepare:<br><br>
<center><button class="btnstay" data-bind="click: function() { $root.coldLevelCheck(0)}">Prepare</button><br><br></center>
Then move the bed up until it's just catching the feeler gauge between nozzle and bed.


    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 1mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',-1,1) }"><i class="icon-arrow-up"></i></button>
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',1,1) }"><i class="icon-arrow-down"></i></button>
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.1mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',-1,0.1) }"><i class="icon-arrow-up"></i></button>
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',1,0.1) }"><i class="icon-arrow-down"></i></button>
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.01mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',-1,0.01) }"><i class="icon-arrow-up"></i></button>
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), click: function() { $root.sendJogCommand('z',1,0.01) }"><i class="icon-arrow-down"></i></button>
        </div>
    </div>
<br><br><br>
Once at that position, click "Next Corner" to check each corner in turn.  Here's the missing logic - need to ask the user which corner is highest then record that Z height, and use that for all future Z positions; also need to count trips so we only level each corner twice, with a second confirmation of height on the original corner in between each run.
<br><br>    
For now, however - move to each corner and adjust level as needed.
<br><br><br>
<button class="btnstay" data-bind="click: function() { $root.coldLevelCheck('next')}">Next Corner</button>
<br><br>
Once you've gone around at least once, you can then proceed; where you go next depends on how we branch things, so is currently not implemented.

</div>




{# <br><br><center><button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser, click: function() { $root.goTo('12') }">Next Step<br /></button></center> #}

</div>
{#      88   ad888888b,  
      ,d88  d8"     "88  
    888888          a8P  
        88       ,d8P"   
        88     a8P"      
        88   a8P'        
        88  d8"          
        88  88888888888  #}

{# Print Something with EXT1 Only #}
<div data-bind="visible: loginState.isUser && maintenancePage()===12">
Now we’ll print a square pattern in order to determine the level of calibration between both extruders along the X and Y axes.

After printing the pattern, you’ll examine it on the build plate: the perimeters of the pattern should be perfectly aligned, and should not overlap except at the purge lines, which are located at the lower left-hand corner of the pattern.

<br><br>
<center><button class="btnstay" data-bind="click: function() { $root.printWiggleConfirm('simple') }, enable: !$root.stepTwelveSimpleClicked()">Print Simple Test</button>
<br><br>
<button class="btngo" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }">Skip to Calibration Adjustment</button><br><br>
</center>
<br><br><div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
</div>

<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
    Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
    <div data-bind="visible: !$root.isDual()">
    Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    </div>
    <div data-bind="visible: $root.isDual()">
    Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
    Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
    </div>
</div>
</div><br><br>
<!--
<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===12" /><br><br><br>


If the two squares do not overlap, click “Begin Dual Printing”:<br><br>

<center>
<button class="btngoBig" data-bind="click: function() { $root.goTo('16'); window.scroll(0,0) }, enable: $root.stepTwelveSimpleClicked()">Begin Dual Printing</button></center><br><br><br>

If the two squares overlap, click “Adjust X and Y Offsets” to proceed:<br><br>
<center>
<button class="btngoBig" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }, enable: $root.stepTwelveSimpleClicked()">Adjust X and Y Offsets</button></center>
-->


<table>
    <tr>
        <td style="width:45%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">
            <a href="/plugin/mgsetup/static/img/cross.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===12" /></a>
 
        </td>

        <td style="width:45%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

            <a href="/plugin/mgsetup/static/img/cross.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross.jpg', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===12" /></a>
 
        </td>
 



    </tr>




    <tr>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
           The two patterns do not intersect and have even spacing


             
        </td>

        <td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
               The two patterns intersect or have uneven spacing

        </td>

    </tr>

    <tr>

        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
            
         <center><button class="btngoBig" data-bind="click: function() { $root.goTo('16'); window.scroll(0,0) }, enable: $root.stepTwelveSimpleClicked()">Begin Dual Printing</button></center>

        </td>


        <td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">

<center><button class="btngoBig" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }, enable: $root.stepTwelveSimpleClicked()">Adjust X and Y Offsets</button></center>


        </td>

    <tr>

</table>





</div>
{#      88   ad888888b,  
      ,d88  d8"     "88  
    888888          a8P  
        88       aad8"   
        88       ""Y8,   
        88          "8b  
        88  Y8,     a88  
        88   "Y888888P'  #}

{# Print with Both Extruders - MG Keychain ? #}
<div id="control-jog-custom" style="clear: both; display: none;" data-bind="visible: loginState.isUser  && maintenancePage()===13">

<h1>Adjust Starting Height </h1>

Here we will adjust the initial starting height of the printer.  Click <strong>Prepare</strong> to move the printer to its testing position.<br><br>

<center><button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() , click: function() { $root.setupSetStartingHeight(0) ; $root.maintenanceThirteenPrepared(1) }">{{ _('Prepare') }}</button></center><br><br>
During this step you'll use the <strong>Bed Height Buttons</strong> below to adjust the distance between the nozzle and the glass.

<p>
    First, press the "1mm Up" button as you are watching the bed. You will see the bed move 1mm towards the nozzle. You will need to slowly repeat this process until the glass is within 1mm of the nozzle. Be careful not to hit the nozzle with the build platform!
</p>

<p>
    Now you can put the blue feeler gauge between the nozzle and the glass. Use the ".1mm up button" to bring the glass even close to the nozzle. As soon as you feel the feeler gauge get stuck, use the ".1mm down button" to move the bed back down (the feeler gauge should move freely)
</p>

<p>
    Next, use the ".01 up button" to move the bed up until you until you start to feel resistance while sliding the feeler gauge between the glass and nozzle. 
</p>

<div class="fileupload-new thumbnail" style="width: 95%; ">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/13.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='5'" /><center>
        </center>
    </div><br>
    <div data-bind="visible: !$root.hideDebug()"><br>Original Z Offset : <span data-bind="text: $root.ZOffset"></span><br></div>
Current Z Position : <span data-bind="text: $root.ZPos"></span>
<div data-bind="visible: !$root.hideDebug()"><br>Fresh data : <span data-bind="text: $root.ZPosFresh"></span></div><br>

<!-- Z jogging control panel -->


<h4>Bed Height Buttons</h4>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 1mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.maintenanceThirteenPrepared() && $root.ZPos() > 1, click: function() { $root.sendJogCommand('z',-1,1) }"><i class="icon-arrow-up"></i></button> 1mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.maintenanceThirteenPrepared() && $root.ZPos() > 1, click: function() { $root.sendJogCommand('z',1,1) }"><i class="icon-arrow-down"></i></button>1mm down
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.1mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.maintenanceThirteenPrepared(), click: function() { $root.sendJogCommand('z',-1,0.1) }"><i class="icon-arrow-up"></i></button> .1mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.maintenanceThirteenPrepared(), click: function() { $root.sendJogCommand('z',1,0.1) }"><i class="icon-arrow-down"></i></button>.1mm Down
        </div>
    </div>
    <div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
        <h1>Z 0.01mm</h1>
        <div>
            <button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.maintenanceThirteenPrepared(), click: function() { $root.sendJogCommand('z',-1,0.01) }"><i class="icon-arrow-up"></i></button>.01mm Up
        </div>
        <div>
            <button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.maintenanceThirteenPrepared(), click: function() { $root.sendJogCommand('z',1,0.01) }"><i class="icon-arrow-down"></i></button>.01mm Down
        </div>
    </div>




<br><br><br><br><br> <br><br><br>  <br>    

<center><button id="control-yinc" class="btnstayBig" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.maintenanceThirteenPrepared() && !$root.maintenanceThirteenSaved(), 
click: function() { $root.setupSetStartingHeight(1); $root.maintenanceThirteenSaved(true) }">{{ _('Save New Starting Height') }}</button></center>
<br><br>

<center><button class="btngoBig" data-bind="enable: $root.maintenanceThirteenPrepared && $root.maintenanceThirteenSaved(), click: function() { $root.goTo('11'); window.scroll(0,0) }">Next Step</button></center>

<br><br></div>

<br><br><br>







{#                    
    88    ad8888ba,  
  ,d88   8P'    "Y8  
888888  d8           
    88  88,dd888bb,  
    88  88P'    `8b  
    88  88       d8  
    88  88a     a8P  
    88   "Y88888P"   
                     
                   #}
<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && maintenancePage()===16">
<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
        <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/both-small.png', 'width': '100%',} , visible: loginState.isUser && maintenancePage()===16" />
    </div><br>

    <h1 style="text-align:left;">Your First Print on T1</h1>
    <!--
    <p>
        <em>How to print Video</em>
    </p>
-->


    <p>
        We've already sliced the same keychain as before for T1 - you should see 'mgkeychainT1.gco' with several buttons below it in the file menu. Press the <span class="icon-print"></span> icon to start the keychain printing on T1.
    </p>
    <img src="/plugin/mgsetup/static/img/mgkeychainT1gco.png" style="display:block;width::50%;margin-left:auto;margin-right:auto">


    <p>
        Your printer will make sure that the Right Extruder (T1)/bed are heated correctly, and then start to print the keychain.  You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 
    </p>

<br>
    <h1 style="text-align:left;">Your First Dual Color Print</h1>
    <p>
        Once your T1 keychain is complete, and your print bed is cleared, you can print with both extruders. We've also included a different keychain that makes use of both extruders - select "mgkeychainDual.gco" for printing to start that model.
    <img src="/plugin/mgsetup/static/img/mgkeychainDualgco.png" style="display:block;width::50%;margin-left:auto;margin-right:auto">





    </p>



</div>




























<br><br><button class="arrowbtn" data-bind="visible: loginState.isUser, enable: $root.hasHistory(), click: function() {$root.stepBack()}" style="float:left;"><i class="icon-circle-arrow-left"></i></button><button class="arrowbtn" data-bind="visible: loginState.isUser, enable: $root.hasFuture(), click: function() {$root.stepForward()}" style="float:right;"><i class="icon-circle-arrow-right"></i></button><br><br><br>
</div>
<div data-bind= "visible: !$root.hideDebug()">
<input type="checkbox" data-bind="checked: $root.hideDebug" /> Hide debug options.
<hr />
Ignore everything below this statement.  And this statement.<br>

{#  88888888ba,    88888888888  88888888ba   88        88    ,ad8888ba,   
    88      `"8b   88           88      "8b  88        88   d8"'    `"8b  
    88        `8b  88           88      ,8P  88        88  d8'            
    88         88  88aaaaa      88aaaaaa8P'  88        88  88             
    88         88  88"""""      88""""""8b,  88        88  88      88888  
    88         8P  88           88      `8b  88        88  Y8,        88  
    88      .a8P   88           88      a8P  Y8a.    .a8P   Y8a.    .a88  
    88888888Y"'    88888888888  88888888P"    `"Y8888Y"'     `"Y88888P"   #}
<div>
    Which step to show:
    <div><input type="radio" name="maintenancePageSelect" value=0 data-bind="checkedValue: 0, checked: maintenancePage, click: window.scroll(0,0)" /> Zero - Welcome Page</div>
    <div><input type="radio" name="maintenancePageSelect" value=1 data-bind="checkedValue: 1, checked: maintenancePage, click: window.scroll(0,0)" /> One - Starting Height Check (Z head crash/gap)</div>
{#     <div><input type="radio" name="maintenancePageSelect" value=2 data-bind="checkedValue: 2, checked: maintenancePage, click: window.scroll(0,0)" /> Two - Adjust Starting Height (cold)</div>
    <div><input type="radio" name="maintenancePageSelect" value=3 data-bind="checkedValue: 3, checked: maintenancePage, click: window.scroll(0,0)" /> Three - Load Filament</div> #}
 {#    <div><input type="radio" name="maintenancePageSelect" value=4 data-bind="checkedValue: 4, checked: maintenancePage, click: window.scroll(0,0)" /> Four - Verify Starting Height (Wiggle)</div> #}
    <div><input type="radio" name="maintenancePageSelect" value=5 data-bind="checkedValue: 5, checked: maintenancePage, click: window.scroll(0,0)" /> Five - Heated Corner Check (Wiggles)</div>
{#     <div><input type="radio" name="maintenancePageSelect" value=6 data-bind="checkedValue: 6, checked: maintenancePage, click: window.scroll(0,0)" /> Six - Heated Leveling (Wiggles)</div> #}
    <div><input type="radio" name="maintenancePageSelect" value=7 data-bind="checkedValue: 7, checked: maintenancePage, click: window.scroll(0,0)" /> Seven - Done</div>
    <div><input type="radio" name="maintenancePageSelect" value=8 data-bind="checkedValue: 8, checked: maintenancePage, click: window.scroll(0,0)" /> Eight - Dual Cold Starting Height Check</div>
{#     <div><input type="radio" name="maintenancePageSelect" value=9 data-bind="checkedValue: 9, checked: maintenancePage, click: window.scroll(0,0)" /> Nine - Dual Cold Starting Height Adjustment</div> #}
{#     <div><input type="radio" name="maintenancePageSelect" value=10 data-bind="checkedValue: 10, checked: maintenancePage, click: window.scroll(0,0)" /> Ten - Dual Load Filament Extruder 1</div> #}
{#     <div><input type="radio" name="maintenancePageSelect" value=11 data-bind="checkedValue: 11, checked: maintenancePage, click: window.scroll(0,0)" /> Eleven - Dual Extruder 1 Height Adjustment</div> #}
    <div><input type="radio" name="maintenancePageSelect" value=12 data-bind="checkedValue: 12, checked: maintenancePage, click: window.scroll(0,0)" /> Twelve - Dual Extruder 1 First Print</div>
    <div><input type="radio" name="maintenancePageSelect" value=13 data-bind="checkedValue: 13, checked: maintenancePage, click: window.scroll(0,0)" /> Thirteen - Dual Both Extruders Print</div>
{#     <div><input type="radio" name="maintenancePageSelect" value=14 data-bind="checkedValue: 14, checked: maintenancePage, click: window.scroll(0,0)" /> Fourteen - Dual X Offset Calibration</div>
    <div><input type="radio" name="maintenancePageSelect" value=15 data-bind="checkedValue: 15, checked: maintenancePage, click: window.scroll(0,0)" /> Fifteen - Dual Y Offset Calibration</div> #}
    <div><input type="radio" name="maintenancePageSelect" value=16 data-bind="checkedValue: 16, checked: maintenancePage, click: window.scroll(0,0)" /> Sixteen - Done/Prints</div>


</div>
Check network connectivity again: <button data-bind="click: function() { $root.checkGoogle() }">Check Google</button><br>
Check network connectivity again: <button data-bind="click: function() { $root.checkGoogle('fail') }">Check Fail</button><br>
Check network connectivity again: <button data-bind="click: function() { $root.checkGoogle() }">Check Google</button><br><br>
Reset this step: <button data-bind="click: function() { $root.resetStep($root.maintenancePage()) }">Step Reset</button><br>


Waiting For M503: <span data-bind="text: 'True', visible: $root.waitingForM()"></span><span data-bind="text: 'False', visible: !$root.waitingForM()"></span>
<br>Bed: <span data-bind="text: $root.displayBedTemp()"></span><br>
Tool0: <span data-bind="text: $root.displayToolTemp()"></span><br>
</div>











<div id="dialog-sawbin" title="Pattern Confirmation" class="modal hide fade medium">
    <div style="width:95%; height:95%; margin:auto; "><p><br>
    <center>Please make sure that your Print Bed is clear before printing this Calibration Pattern.<br>
<div data-bind="visible: $root.calibrationStep() === 0">This will print Pattern 1, Coarse Adjustment.</div>
<div data-bind="visible: $root.calibrationStep() === 1">This will print Pattern 2, Medium Adjustment.</div>
<div data-bind="visible: $root.calibrationStep() === 2">This will print Pattern 3, Fine Adjustment.</div>
    </center><br><br>
    <button style="float: left; width: 35%;" data-bind="click: function() { $root.printSawBinDialog.modal('hide'); $root.skipConfirm(false) }">Cancel Pattern</button><button style="float: right; width: 45%;" data-bind="click: function() { $root.pickSawBin(); $root.printSawBinDialog.modal('hide') }">Bed Is Clear - Print</button><br><br>
    {# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

    </div><br>
</div>

<div id="dialog-preflight" title="Preflight Check" class="modal hide fade medium">
    <div style="width:95%; height:95%; margin:auto; "><p><br>
    <center>Before starting Quick Check, please complete all setup procedures contained in the M3 User Guide booklet (included with your M3).<br>

    </center><br><br>
    <button style="float: left; width: 35%;" data-bind="click: function() { $root.preflightDialog.modal('hide')}">Cancel Quick Check</button><button style="float: right; width: 45%;" data-bind="click: function() { $root.goTo('1'); $root.preflightDialog.modal('hide') }">Begin Quick Check</button><br><br>
    {# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

    </div><br>
</div>

<div id="dialog-wiggle" title="Zigzag Print Confirmation" class="modal hide fade medium">
    <div style="width:95%; height:95%; margin:auto; "><p><br>
    <center>Please make sure that your Print Bed is clear before printing this Zigzag.<br>

    </center><br><br>
    <button style="float: left; width: 35%;" data-bind="click: function() { $root.printWiggleDialog.modal('hide'); $root.skipConfirm(false) }">Cancel Pattern</button><button style="float: right; width: 45%;" data-bind="click: function() { $root.printWiggle(); $root.printWiggleDialog.modal('hide') }">Bed Is Clear - Print</button><br><br>
    {# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

    </div><br>
</div>

<script src="/plugin/mgsetup/static/video-js/video.min.js"></script>
<link href="/plugin/mgsetup/static/video-js/video-js.min.css" rel="stylesheet">
